{
  "name": "mini-trello",
  "version": "1.0.0",
  "description": "Production-ready Trello clone with advanced performance optimizations",
  "private": true,
  "workspaces": [
    "backend",
    "frontend"
  ],
  "scripts": {
    "install:all": "npm run install:backend && npm run install:frontend",
    "install:backend": "cd backend && npm install",
    "install:frontend": "cd frontend && npm install",
    "setup:env": "cp backend/env.example backend/.env",
    "setup:db": "cd backend && npx prisma generate && npx prisma migrate dev && npm run seed",
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:backend": "cd backend && npm run dev",
    "dev:frontend": "cd frontend && npm run dev",
    "build": "npm run build:backend && npm run build:frontend",
    "build:backend": "cd backend && npm run build",
    "build:frontend": "cd frontend && npm run build",
    "start": "concurrently \"npm run start:backend\" \"npm run start:frontend\"",
    "start:backend": "cd backend && npm start",
    "start:frontend": "cd frontend && npm run preview",
    "type-check": "npm run type-check:backend && npm run type-check:frontend",
    "type-check:backend": "cd backend && npx tsc --noEmit",
    "type-check:frontend": "cd frontend && npx tsc --noEmit",
    "lint": "npm run lint:backend && npm run lint:frontend",
    "lint:backend": "cd backend && npm run lint",
    "lint:frontend": "cd frontend && npm run lint",
    "test": "npm run test:backend && npm run test:frontend",
    "test:backend": "cd backend && npm test",
    "test:frontend": "cd frontend && npm test",
    "clean": "npm run clean:backend && npm run clean:frontend",
    "clean:backend": "cd backend && rm -rf node_modules dist",
    "clean:frontend": "cd frontend && rm -rf node_modules dist",
    "db:reset": "cd backend && npx prisma migrate reset && npm run seed",
    "db:migrate": "cd backend && npx prisma migrate dev",
    "db:generate": "cd backend && npx prisma generate",
    "seed": "cd backend && npm run seed",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "health": "curl http://localhost:3001/api/health && curl http://localhost:3000"
  },
  "devDependencies": {
    "concurrently": "^8.2.2"
  },
  "engines": {
    "node": ">=16.0.0",
    "npm": ">=8.0.0"
  },
  "keywords": [
    "trello",
    "clone",
    "react",
    "typescript",
    "express",
    "prisma",
    "postgresql",
    "performance",
    "production-ready"
  ],
  "author": "Your Name",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "your-repository-url"
  },
  "bugs": {
    "url": "your-repository-url/issues"
  },
  "homepage": "your-repository-url#readme"
}
